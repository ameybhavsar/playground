// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'gradle-one-jar'
apply plugin: 'application'

// Use Java 8 by default
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// UTF-8 should be standard by now. So use it!
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// Set our project variables
project.ext {
    dropwizardVersion = '1.0.0'
    amazonSDKVersion = '1.11.35'
}

project.mainClassName = 'com.nyu.edu.services.MyFirstAppApplication'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.3'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {

    // Dropwizard dependencies
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-hibernate', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-auth', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-assets', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-migrations', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-http2', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-testing', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-metrics-graphite', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-views-freemarker', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-views-mustache', version: dropwizardVersion

    // H2 database dependencies
    compile group: 'com.h2database', name: 'h2', version: '1.4.192'

    // Amazon dependencies
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: amazonSDKVersion

    // Junit dependencies
    testCompile 'junit:junit:4.12'
}

// Configure the oneJar task
task oneJar(type: OneJar) {
    mainClass = project.mainClassName
}

// Configure the run task to start the Dropwizard service
run {
    args 'server', './src/main/java/com/nyu/edu/services/config.yml'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

artifacts {
    oneJar
}

project.ext.dependencies = configurations.compile.resolve().findAll()
project.ext.manifestClasspath = project.ext.dependencies.collect { it.getName() }.join(',')
project.ext.projectManifest = manifest {
    attributes 'Main-Class': project.mainClassName, 'Class-Path': project.ext.manifestClasspath
}

// Configure the fat-shaded jar.
jar {
    description = 'Creates a shaded/uberjar/fatjar of dropwizard'
    archiveName = "${project.name}-${version}.jar"
    manifest = project.ext.projectManifest

    doFirst {
        def serviceDir = file("$buildDir/META-INF/services")
        serviceDir.deleteDir()
        serviceDir.mkdirs()
        for (file in project.ext.dependencies) {
            zipTree(file).matching { include 'META-INF/services/*' }.each { f ->
                new File(serviceDir, f.name) << f.getText("UTF-8")
            }
        }
    }
    from sourceSets.main.output
    from(project.ext.dependencies.collect { zipTree(it) }) {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'META-INF/*.INF'
        exclude 'META-INF/*.inf'
        exclude 'META-INF/services/*'
    }
    from fileTree(buildDir).matching { include 'META-INF/services/*' }
}

task skinnyJar(type: Jar) {
    description = 'Creates a skinny/no-dependencies of dropwizard'
    baseName = "${project.name}"
    version = "${version}"
    classifier = "no-dependencies"
    extension = "jar"
    from sourceSets.main.output
    manifest = project.ext.projectManifest
}

artifacts {
    archives skinnyJar
}


